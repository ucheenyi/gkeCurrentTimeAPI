name: Deploy API

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

  docker-build-deploy:
    name: Docker Build and Deploy
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build Docker image
        run: docker build -t gcr.io/<your-project-id>/api:latest .

      - name: Push Docker image
        run: docker push gcr.io/<your-project-id>/api:latest

      - name: Deploy to Kubernetes
        run: kubectl apply -f k8s/
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

  test:
    name: Test API
    runs-on: ubuntu-latest
    needs: docker-build-deploy
    steps:
      - name: Check API availability
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://<your-api-endpoint>/time)
          if [ "$response" -ne 200 ]; then
            exit 1
          fi
        env:
          API_URL: ${{ secrets.API_URL }}
